FROM golang:1.23-bullseye AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    cmake build-essential \
    libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
    libgl1-mesa-dev xorg-dev \
    portaudio19-dev libasound2-dev libayatana-appindicator3-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only what's needed for building whisper.cpp first
COPY third_party/whisper.cpp /app/third_party/whisper.cpp

# Build whisper.cpp
RUN cd /app/third_party/whisper.cpp && \
    mkdir -p build && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && \
    cmake --build . --parallel && \
    # Show what was built
    find . -name "*.so" -o -name "*.a"

# Now copy the rest of the app and build it
COPY . /app

# Create symlinks for libraries
RUN ln -sf /app/third_party/whisper.cpp/build/src/libwhisper.so /app/libwhisper.so && \
    ln -sf /app/third_party/whisper.cpp/include/whisper.h /app/whisper.h && \
    for lib in /app/third_party/whisper.cpp/build/ggml/src/libggml*.so; do \
        ln -sf $lib /app/$(basename $lib); \
    done

# Build the Go application
RUN export CGO_ENABLED=1 && \
    export CGO_CFLAGS="-I/app/third_party/whisper.cpp/include -I/app/third_party/whisper.cpp/ggml/include" && \
    export CGO_LDFLAGS="-L/app/third_party/whisper.cpp/build/src -L/app/third_party/whisper.cpp/build/ggml/src -lwhisper -lggml -lggml-base -lggml-cpu" && \
    export LD_LIBRARY_PATH="/app:/app/third_party/whisper.cpp/build/src:/app/third_party/whisper.cpp/build/ggml/src" && \
    go build -v -tags=whisper_go -o /app/ramble ./cmd/ramble

# Start with a clean, small runtime image
FROM debian:bullseye-slim

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libx11-6 libxrandr2 libxinerama1 libxcursor1 libxi6 \
    libgl1 \
    portaudio19-dev libasound2 libayatana-appindicator3-1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy the binary and libraries from the builder
COPY --from=builder /app/ramble /app/ramble
COPY --from=builder /app/third_party/whisper.cpp/build/src/libwhisper.so /usr/local/lib/
COPY --from=builder /app/third_party/whisper.cpp/build/ggml/src/libggml*.so /usr/local/lib/

# Set up library path
ENV LD_LIBRARY_PATH=/usr/local/lib

# Run the application
WORKDIR /app
ENTRYPOINT ["/app/ramble"]